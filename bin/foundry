#!/usr/bin/env ruby

unless $:.include?(File.dirname(__FILE__) + '/../lib')
  $:.unshift(File.dirname(__FILE__) + '/../lib')
end

require 'trollop'
require 'foundry'
require 'pp'

opts = Trollop::options do
  version "Foundry Ruby Interpreter/Compiler #{Foundry::VERSION}"
  banner <<-EOS
Usage: foundry [options] filename...

  EOS

  opt :target,  "Target environment",         :default => 'dummy'
  opt :warn,    "Enable or disable warnings", :type => :strings
  opt :feature, "Enable or disable features", :type => :strings
end

class << Foundry::VI::Kernel
  def _repl(interp, scope)
    repl = ::Foundry::REPL.new($runtime, interp)
    repl.invoke!

    NIL
  end

  def _trace(interp, scope)
    scope.arguments.each do |arg|
      ::Kernel.p arg
    end

    NIL
  end
end

$runtime = Foundry::Runtime.new
$runtime.bootstrap File.join(File.dirname(__FILE__), '../vm')

$runtime.eval <<-REPL, '(prelude)'
module Kernel
  def repl!
    Foundry.primitive :repl
  end
end
REPL

if ARGV.any?
  ARGV.each do |input|
    if input == '-'
      $runtime.eval STDIN.read, '(stdin)'
    else
      $runtime.load input
    end
  end
else
  $runtime.eval 'repl!', '(prelude)'
end